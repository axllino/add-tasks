{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-20T16:01:32.991Z",
    "end": "2023-12-20T16:01:55.384Z",
    "duration": 22393,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "07493ffe-ffe8-4c63-a571-cffaed7b2a7c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4190948b-faaa-44e1-af5a-936579cb1fd4",
          "title": "ADICIONAR TAREFAS",
          "fullFile": "C:\\Users\\lino\\Desktop\\Selenium_Aula05\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CT - 02 TAREFAS ADICIONAS OK",
              "fullTitle": "ADICIONAR TAREFAS CT - 02 TAREFAS ADICIONAS OK",
              "timedOut": null,
              "duration": 13128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ABRIR NAVEGADOR\n        let driver = await new Builder().forBrowser('firefox').build()\n        // NAVEGAR ATÉ SITE\n        await driver.get('https://herziopinto.github.io/lista-de-tarefas/')\n        const tarefas = ['carro', 'moto', 'bicicleta', 'pés', 'mãos', 'sapatos', 'farda', 'roupas', 'toalhas', 'cabelo'];\n        // Loop for para realizar 10 envios de teclas\n        for (let i = 0; i < 10; i++) {\n            let task = `Lavar ${tarefas[i]} - tarefa ${i + 1}`; // Criar uma tarefa diferente para cada iteração\n            await driver.findElement(By.id(\"inputTask\")).sendKeys(task, Key.RETURN);\n        }\n        // Adicionar afirmações usando should\n        const taskCount = await driver.findElements(By.xpath('/html/body/div/section/ul/li/label'));\n        // Verificar se o número de elementos é igual a 10\n        taskCount.should.have.lengthOf(tarefas.length);\n        // FECHAR NAVEGADOR\n        await driver.quit()",
              "err": {},
              "uuid": "d78ea7db-997c-4f53-9f4d-9700bc1ca332",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d78ea7db-997c-4f53-9f4d-9700bc1ca332"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13128,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "378bb8cb-cee8-4adc-b9b0-5d64ffe1f588",
          "title": "ADICIONAR TAREFAS",
          "fullFile": "C:\\Users\\lino\\Desktop\\Selenium_Aula05\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "CT - 01 Tarefa adicionada com sucesso",
              "fullTitle": "ADICIONAR TAREFAS CT - 01 Tarefa adicionada com sucesso",
              "timedOut": null,
              "duration": 12428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ABRIR NAVEGADOR\n        let driver = await new Builder().forBrowser('firefox').build()\n        // NAVEGAR ATÉ O SITE\n        await driver.get('https://herziopinto.github.io/lista-de-tarefas/')\n        // LISTAR TAREFA\n        await driver.findElement(By.id('inputTask')).sendKeys('Inaugurar Barbearia', Key.RETURN)\n        //ASSERT\n        let seleniumText = await driver.findElement(By.xpath('/html/body/div/section/ul/li/label')).getText().then(function (value) {\n            return value\n        })\n        // assertion node puro \n        // assert.strictEqual(seleniumText, 'Inaugurar Barbearia')\n        seleniumText.should.equal('Inaugurar Barbearia')\n        // FECHAR NAVEGADOR\n        await driver.quit()",
              "err": {},
              "uuid": "06e3f3b0-ff3e-44e7-92cc-82b5d3dde532",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tarefa adicionada com sucesso",
              "fullTitle": "ADICIONAR TAREFAS Tarefa adicionada com sucesso",
              "timedOut": null,
              "duration": 9038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ABRIR NAVEGADOR\n        let driver = await new Builder().forBrowser('firefox').build()\n        // NAVEGAR ATÉ O SITE\n        await driver.get('https://herziopinto.github.io/lista-de-tarefas/')\n        // LISTAR TAREFA\n        await driver.findElement(By.id('inputTask')).sendKeys('Conseguir primeira vaga de QA', Key.RETURN)\n        //ASSERT\n        let seleniumText = await driver.findElement(By.xpath('/html/body/div/section/ul/li/label')).getText().then(function (value) {\n            return value\n        })\n        // assertion node puro \n        // assert.strictEqual(seleniumText, 'Inaugurar Barbearia')\n        seleniumText.should.equal('Conseguir primeira vaga de QA')\n        // FECHAR NAVEGADOR\n        await driver.quit()",
              "err": {},
              "uuid": "a2b9a7e3-0afa-4bb5-bbad-5b4e4f5961b7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06e3f3b0-ff3e-44e7-92cc-82b5d3dde532",
            "a2b9a7e3-0afa-4bb5-bbad-5b4e4f5961b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21466,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}